{"version":3,"sources":["webpack:///./index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","onTick","targetDate","selector","this","intervalId","start","setInterval","time","Date","now","timer","getTimeComponents","pad","Math","floor","value","String","replace","padStart","textContent"],"mappings":"qKAEMA,EAAO,CACTC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,KAAMJ,SAASC,cAAc,wBAmCV,I,WA/BnB,cAA2C,IAA9BI,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,WAAYC,EAAU,EAAVA,SAC7BC,KAAKC,WAAa,KAClBD,KAAKH,OAASA,EACdG,KAAKF,WAAaA,EAClBE,KAAKD,SAAWA,E,2BAGpBG,MAAA,WAAQ,WACJF,KAAKC,WAAaE,aAAY,WAC1B,IACMC,EADYC,KAAKC,MACE,EAAKR,WACxBS,EAAQ,EAAKC,kBAAkBJ,GACrC,EAAKP,OAAOU,KACb,M,EAIPC,kBAAA,SAAkBJ,GAMd,MAAO,CAACb,KALKS,KAAKS,IAAIC,KAAKC,MAAMP,EAAO,QAK1BV,MAJAM,KAAKS,IAAIC,KAAKC,MAAOP,EAAO,MAAR,OAIbT,KAHRK,KAAKS,IAAIC,KAAKC,MAAOP,EAAO,KAAR,MAGNR,KAFdI,KAAKS,IAAIC,KAAKC,MAAOP,EAAO,IAAe,Q,EAK5DK,IAAA,SAAIG,GACA,OAAOC,OAAOD,GAAOE,QAAQ,IAAK,IAAIC,SAAS,EAAE,M,KAIlC,CAAmB,CACtClB,OAOJ,YAAmD,IAAzBN,EAAyB,EAAzBA,KAAMG,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,KAAMC,EAAM,EAANA,KACzCN,EAAKC,KAAKyB,YAAV,GAA2BzB,EAC3BD,EAAKI,MAAMsB,YAAX,GAA4BtB,EAC5BJ,EAAKK,KAAKqB,YAAV,GAA2BrB,EAC3BL,EAAKM,KAAKoB,YAAV,GAA2BpB,GAV3BE,WAAY,IAAIO,KAAK,uBACrBN,SAAU,aAGCG,U","file":"main.88582fe1d3ae3e7572b5.js","sourcesContent":["import './styles.css';\n\nconst refs = {\n    days: document.querySelector('[data-value=\"days\"]'),\n    hours: document.querySelector('[data-value=\"hours\"]'),\n    mins: document.querySelector('[data-value=\"mins\"]'),\n    secs: document.querySelector('[data-value=\"secs\"]'),\n}\n\nclass CountdownTimer {\n    constructor({onTick, targetDate, selector}){\n        this.intervalId = null;\n        this.onTick = onTick;\n        this.targetDate = targetDate;\n        this.selector = selector;\n    }\n\n    start() {\n        this.intervalId = setInterval(() => {\n            const startDate = Date.now();\n            const time = startDate - this.targetDate;\n            const timer = this.getTimeComponents(time);\n            this.onTick(timer);\n        }, 1000);\n        \n    }\n\n    getTimeComponents(time) {\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    \n        return {days, hours, mins, secs};\n    }\n\n    pad(value){\n        return String(value).replace('-', '').padStart(2,'0');\n    }\n}\n\nconst countdownTimer = new CountdownTimer({\n    onTick: updateClockface,\n    targetDate: new Date('2021-06-05T23:00:00'),\n    selector: '#timer-1',\n});\n\ncountdownTimer.start();\n\nfunction updateClockface({days, hours, mins, secs}){\n    refs.days.textContent = `${days}`;\n    refs.hours.textContent = `${hours}`;\n    refs.mins.textContent = `${mins}`;\n    refs.secs.textContent = `${secs}`;\n}\n\n"],"sourceRoot":""}